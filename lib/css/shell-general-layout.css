
:root {
    overflow-y: auto;
    margin: 0;
    --gap-color: #dfdfdf;
    --gap-size: .3rem;
    --list-item-odd-bg: #fff;
    --list-item-even-bg: #eee;
    --background-color: #fff;

    --transparency-indicator-bg-dark: #666;
    --transparency-indicator-bg-light: #ccc;
    --transparency-indicator-bg-image: conic-gradient(
            var(--transparency-indicator-bg-light) 90deg,
            var(--transparency-indicator-bg-dark) 90deg 180deg,
            var(--transparency-indicator-bg-light) 180deg 270deg,
            var(--transparency-indicator-bg-dark) 270deg 0deg
    );
    --transparency-indicator-bg-size: 15px 15px;

    --text-color: #121212;
    --text-color-disabled: #888;
}

body {
    background: var(--gap-color);
    margin: var(--gap-size);
    font-variation-settings: initial;
    color: var(--text-color);
    font-family: RobotoFlex, sans-serif;
    font-weight: 369;
}

*, body, .heading_anchor{
    --font-size-change: 1;
}
h1 {
    --font-size-change: 2.5;
}

h2 {
    --font-size-change: 1.8;
}

h3 {
    --font-size-change: 1.4;
}

h4 {
    --font-size-change: 1.17;
}

body, h1, h2, h3, h4, h5, h6, h7, .heading_anchor {
    --font-size-base-unit: 1rem;
    font-size: calc(var(--font-size-change) * var(--font-size-base-unit));
    /* There's no pure CSS way to determine the actual font size in pt
     * however, the default is 16px/12pt so I'm going to base of that
     * Also given that the reading intent corresponds to these sizes.
     */
    --font-size-pt-assumption: 12;
    font-variation-settings: "opsz" calc(var(--font-size-pt-assumption) * var(--font-size-change));
}

.typeroof-ui :is(h1, h2, h3, h4, h5, h6, h7) {
    --font-size-base-unit: .8em;
}


body > .wrapper {
  display: grid;
  gap: var(--gap-size);
  grid-template-columns: 17.375rem auto;
  grid-template-rows: auto 1fr auto;
  grid-template-areas:  "header main"
                        "sidebar main"
                        "sidebar footer";
  height: calc(100vh - (2 * var(--gap-size, 0)));
}

body > .wrapper > header {
  grid-area: header;
  height: fit-content;
}

body > .wrapper > .typeroof-ui_sidebar {
    grid-area: sidebar;
    padding: 1rem  var(--gap-size, 1rem);
    overflow-y: auto;
    background: var(--background-color, red);
}

body > .wrapper > .typeroof-main {
    grid-area: main;
    background: var(--background-color, magenta);
    display: flex;
    flex-direction: column;
}

/**
 * With this configuration we can measure the size of .typeroof-layout
 * to know how much space it has available without scrolling.
 *
 * Also, the controls in .typeroof-layout-before and
 * .typeroof-layout-after will always stay visible.
 */
body > .wrapper > .typeroof-main >.typeroof-layout {
    overflow: auto;
    flex-grow: 1;
}

body > .wrapper > footer{
    grid-area: footer;
    height: fit-content;
}


a {
    text-decoration: underline;
}
a:link, a:visited {
    color: #121212;
}
body, select, input, textarea {
    color: var(--text-color);
}
dialog {
  background-color: var(--background-color);
  border: var(--gap-size) solid var(--gap-color);
}

form fieldset {
    background-color: var(--background-color);
    border: var(--gap-size) solid var(--gap-color);
    margin-bottom: 1.125rem;
    padding: 0.9375rem 0.75rem;
}

dialog label {
    display: block;
}

button, form button {
    background-color: var(--background-color);
    box-shadow: rgba(43, 43, 43, 0.08) 0 0 0.1875rem;
    border: 1px solid #b7b4b0;
    border-radius: 0.125rem;
    color: var(--text-color);
    display: inline-block;
    font-size: 0.875rem;
    font-family: RobotoFlex, sans-serif;
    font-variation-settings: "opsz" 14;
    transition: all 75ms linear;
    white-space: nowrap;
    line-height: 1.5em;
}

form button {
    height: 2.625rem;
    line-height: 2.625rem;
    padding: 0 1em;
}

button:hover, form button:hover {
    box-shadow: rgba(43, 43, 43, 0.15) 0 0 0.625rem;
}

fieldset{
    border: none;
    border-bottom: 1px solid #b7b4b0;
    border-radius: 0.125rem;
    min-inline-size: 0;
    margin-inline: 0;
    padding-inline: .2em;
}

fieldset {
    /*
     * The goal here is to create a similar distance between the borders
     * of fieldsets with legend and fieldsets without. A fieldset with
     * legend requires less margin, as the legend pushes it down as well.
     */
    margin-block-start: .9em;
}
fieldset:has(> legend) {
    margin-block-start: .5em;
}


footer, header {
    background-color: #121212;
    padding: 1rem;
    color: #fff;
}

footer > *, header > * {
    margin: 0;
}

header h1 {
    font-size: 1.5em;
    font-variation-settings: "opsz" 16;
    font-weight: 300;
}


footer {
    font-size: .8em;
    font-variation-settings: "opsz" 10;
}

footer ul{
    padding: 0;
}
footer li::after{
    display: inline-block;
    content: "\A0•\A0";
    font-size: 2em;
    color: white;
    line-height: .5em; /* basically reset the 2 em font-size to 1em*/
    vertical-align: middle;
    vertical-align: -webkit-baseline-middle;
    overflow: hidden;
}

footer li:last-child::after{
    content: none;
}

:is(footer) :is(a, a:visited, a:link) {
    color: #fff;
}

:is(header, .sidebar, footer) :is(a, a:visited, a:link) {
  --text-decoration: none;
}

footer li {
    display: inline;
    padding: 0;
    margin: 0;
}


.typeroof-docs .typeroof-ui_sidebar {
    font-size: .8rem;
}

.typeroof-docs .typeroof-ui_sidebar a {
    text-decoration: none;
    color: inherit;
}

.typeroof-docs .typeroof-ui_sidebar ul {
    list-style: none;
    padding: 0;
}

:is(
    .typeroof-docs ul.typeroof-ui_sidebar-app_links,
    .typeroof-docs .typeroof-ui_sidebar nav li > ul
) li:before {
    content: "▪";
    display: inline-block;
    padding-right: .5em;
}

.typeroof-docs .typeroof-ui_sidebar nav li li > ul {
  padding-left: .75em;
}

.typeroof-docs .typeroof-ui_sidebar h3 {
    font-size: 1em;
    margin: .5em 0 .35em 0;
    font-weight: 600;
    letter-spacing: 0.05em;
    text-transform: uppercase;
}

.typeroof-docs .typeroof-ui_sidebar li.active {
    color: red;
}
.typeroof-docs .typeroof-ui_sidebar li.active li:not(.active) {
    color: var(--text-color);
}

.typeroof-docs_content pre {
  overflow-y: auto;
}

body.typeroof-docs > .wrapper > .typeroof-main {
    overflow: auto;
    container-type: inline-size;
}

.typeroof-docs_content {
    padding: var(--gap-size);
}

.typeroof-docs_content .heading_anchor {
    text-decoration: none;
    color: gray;
    font-weight: normal;
}

@container (width > 0) {
  /* the @container query is only required to establish the cqi unit
   * https://developer.mozilla.org/en-US/docs/Web/CSS/length#container_query_length_units
   */
  .typeroof-docs_content {
    --max-width: 50rem;
    /* The max rule guards the free-space to not become negative, that
     * way the actual width of the content plus its inline padding are
     * always available before we add margin.
     */
    --free-space: max(0px, calc(100cqi - var(--max-width) - 2 * var(--gap-size)));
    max-width: var(--max-width);
    /* Try to balance the distance to the left side
     * it grows with the available horizontal space
     * but it would loose contact to the left edge when too big, so we
     * stop growing distance at 1/3 of the content max width.
     * It can't become negative, because --free-space will never be < 0;
     */
    --margin-inline-start: min(var(--free-space) * 1/3, var(--max-width) * 1/3);
    margin-inline-start: var(--margin-inline-start);
  }
  .typeroof-docs_content .heading_anchor{
    /* Because the # is painted in a light gray it creates visually a gap.
     * For the appearance of the left border it's better to move these out,
     * if there's space.
     * The .8em is determined visually with Roboto Flex, it would differ
     * for other fonts and other relative width of the #, also e.g. when
     * e.g. the wdth axis would be used.
     * */
    --move-out: .8em;
    /* if the left margin doesn't have --move-out space the calculation
     * in the second argument of clamp(min, val, max) will be lower than
     * 0 and thus 0; otherwise it will be between 0 and 0.8em. The
     * round(up, valueToRound, roundingInterval) will round up to 0.8em.
     * This means there's either enough space to fit the --move-out left
     * to the content and then the whole value is used or there's not and
     * then the --move-out is not applied at all, without transition in
     * between.
     */
    --use-move-out: round(up,
            clamp(0em,
                  var(--margin-inline-start, 0em) + var(--gap-size) - var(--move-out),
                  var(--move-out)
            ),
            var(--move-out)
    );
    margin-inline-start: calc(var(--use-move-out) * -1);
  }
}

.typeroof-docs_content :is(pre, code) {
    background-color: #eee;
}

